{"version":3,"sources":["components/Pagination.js","App.js","index.js"],"names":["Pagination","state","total","props","perPage","page","withInfo","onPageChange","nextProps","this","setState","firstItem","lastItem","disabled","empty","className","to","currentPage","lastPage","Math","ceil","info","aria-label","value","type","onClick","pagination","Component","App","event","acc","next","prev","target","path","component","ReactDOM","render","document","getElementById"],"mappings":"uRAKqBA,E,4MACnBC,MAAQ,CACNC,MAAO,EAAKC,MAAMD,MAClBE,QAAS,EAAKD,MAAMC,QACpBC,KAAM,EAAKF,MAAME,KACjBC,SAAU,EAAKH,MAAMG,SACrBC,aAAc,EAAKJ,MAAMI,c,wEAGDC,GACxBC,KAAKC,SAAL,eAAmBF,M,6BAInB,IAAMG,EAAYF,KAAKR,MAAMI,KAAOI,KAAKR,MAAMG,QAAUK,KAAKR,MAAMG,QAAU,EAC1EQ,EAAWH,KAAKR,MAAMI,KAAOI,KAAKR,MAAMG,QAI5C,OAFAQ,EAAWA,GAAYH,KAAKR,MAAMC,MAAQO,KAAKR,MAAMC,MAAQU,EAEvD,GAAN,OAAUD,EAAV,cAAyBC,EAAzB,eAAwCH,KAAKR,MAAMC,S,6BAGU,IAA1DG,EAAyD,uDAAlDI,KAAKR,MAAMI,KAAMQ,EAAiC,wDAAfC,EAAe,wDAC5D,OACE,wBAAIC,UAAWF,EAAW,qBAAuB,aAC/C,kBAAC,IAAD,CAAME,UAAU,YAAYC,GAAE,gBAAWX,EAAX,mBAA0BI,KAAKR,MAAMG,UAAYU,EAAQ,MAAQT,M,mCAMnG,IAAMY,EAAcR,KAAKR,MAAMI,KAEzBa,EAAWC,KAAKC,KAAKX,KAAKR,MAAMC,MAAQO,KAAKR,MAAMG,SAEzD,OACE,oCACGK,KAAKJ,KALQ,MAKQY,GAErBA,EAAc,EAAI,EAAIR,KAAKJ,KAAKY,EAAc,EAAGA,EAAc,IAAM,EAAGA,EAAc,IAAM,GAAK,GACjGA,EAAc,EAAI,EAAIR,KAAKJ,KAAKY,EAAc,GAAK,GAClDA,EAAc,GAAKA,EAAcC,EAAYT,KAAKJ,KAAKY,GAAa,GAAQ,GAC7EA,EAAc,EAAIC,EAAWT,KAAKJ,KAAKY,EAAc,GAAK,GAC1DA,EAAc,EAAIC,EAAWT,KAAKJ,KAAKY,EAAc,EAAGA,EAAc,IAAMC,EAAW,EAAGD,EAAc,IAAMC,EAAW,GAAK,GAXjH,IAaCA,EAAWT,KAAKJ,KAAKa,EAAUD,IAAgBC,GAAY,M,+BAM9E,OAEE,oCACE,2BACGT,KAAKR,MAAMK,SAAWG,KAAKY,OAAS,IAEvC,yBAAKC,aAAW,2BACd,wBAAIP,UAAU,qCACZ,wBACEA,UACsB,IAApBN,KAAKR,MAAMI,KACP,qBACA,aAGN,4BACEU,UAAU,YACVQ,MAAM,OACNC,KAAK,SACLC,QACsB,IAApBhB,KAAKR,MAAMI,KACP,aACAI,KAAKR,MAAMM,cAPnB,QAcDE,KAAKiB,aAEN,wBACEX,UACEN,KAAKR,MAAMI,KAAOI,KAAKR,MAAMG,SAAWK,KAAKR,MAAMC,MAC/C,qBACA,aAGN,4BACEa,UAAU,YACVQ,MAAM,OACNC,KAAK,SACLC,QACEhB,KAAKR,MAAMI,KAAOI,KAAKR,MAAMG,SAAWK,KAAKR,MAAMC,MAC/C,aACAO,KAAKR,MAAMM,cAPnB,e,GAzF0BoB,aCsCzBC,E,4MArCb3B,MAAQ,CACNC,MAAO,IACPE,QAAS,EACTC,KAAM,G,EAGRE,aAAe,SAACsB,GACd,IAIMC,EAJS,CACbC,KAAM,EAAGC,MAAO,GAGEH,EAAMI,OAAOV,OAEjC,EAAKb,UAAS,SAAAsB,GAAI,MAAK,CACrB3B,KAAM2B,EAAK3B,KAAOyB,O,uDAIZ,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,KAAK,IACLC,UAAW,kBACT,kBAAC,EAAD,CACEjC,MAAO,EAAKD,MAAMC,MAClBE,QAAS,EAAKH,MAAMG,QACpBC,KAAM,EAAKJ,MAAMI,KACjBC,UAAQ,EACRC,aAAc,EAAKA,uB,GA9BfoB,aCDlBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.83485dfb.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default class Pagination extends Component {\n  state = {\n    total: this.props.total,\n    perPage: this.props.perPage,\n    page: this.props.page,\n    withInfo: this.props.withInfo,\n    onPageChange: this.props.onPageChange,\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...nextProps });\n  }\n\n  info() {\n    const firstItem = this.state.page * this.state.perPage - this.state.perPage + 1;\n    let lastItem = this.state.page * this.state.perPage;\n\n    lastItem = lastItem >= this.state.total ? this.state.total : lastItem;\n\n    return `${firstItem} - ${lastItem} of ${this.state.total}`;\n  }\n\n  page(page = this.state.page, disabled = false, empty = false) {\n    return (\n      <li className={disabled ? 'page-item disabled' : 'page-item'}>\n        <Link className=\"page-link\" to={`?page=${page}perPage=${this.state.perPage}`}>{empty ? '...' : page}</Link>\n      </li>\n    );\n  }\n\n  pagination() {\n    const currentPage = this.state.page;\n    const firstPage = 1;\n    const lastPage = Math.ceil(this.state.total / this.state.perPage);\n\n    return (\n      <>\n        {this.page(firstPage, currentPage === firstPage)}\n\n        {currentPage - 2 > 1 ? this.page(currentPage - 2, currentPage - 2 !== 2, currentPage - 2 !== 2) : ''}\n        {currentPage - 1 > 1 ? this.page(currentPage - 1) : ''}\n        {(currentPage > 1 && currentPage < lastPage) ? this.page(currentPage, true) : ''}\n        {currentPage + 1 < lastPage ? this.page(currentPage + 1) : ''}\n        {currentPage + 2 < lastPage ? this.page(currentPage + 2, currentPage + 2 !== lastPage - 1, currentPage + 2 !== lastPage - 1) : ''}\n\n        {firstPage !== lastPage ? this.page(lastPage, currentPage === lastPage) : ''}\n      </>\n    );\n  }\n\n  render() {\n    return (\n\n      <>\n        <p>\n          {this.state.withInfo ? this.info() : ''}\n        </p>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination justify-content-center\">\n            <li\n              className={\n                this.state.page === 1\n                  ? 'disabled page-item'\n                  : 'page-item'\n              }\n            >\n              <button\n                className=\"page-link\"\n                value=\"prev\"\n                type=\"button\"\n                onClick={\n                  this.state.page === 1\n                    ? () => {}\n                    : this.state.onPageChange\n                }\n              >\n                &lt;&lt;&lt;\n              </button>\n            </li>\n\n            {this.pagination()}\n\n            <li\n              className={\n                this.state.page * this.state.perPage >= this.state.total\n                  ? 'disabled page-item'\n                  : 'page-item'\n              }\n            >\n              <button\n                className=\"page-link\"\n                value=\"next\"\n                type=\"button\"\n                onClick={\n                  this.state.page * this.state.perPage >= this.state.total\n                    ? () => {}\n                    : this.state.onPageChange\n                }\n              >\n                &gt;&gt;&gt;\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  withInfo: PropTypes.number.isRequired,\n  onPageChange: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Pagination from './components/Pagination';\n\nclass App extends Component {\n  state = {\n    total: 142,\n    perPage: 8,\n    page: 1,\n  }\n\n  onPageChange = (event) => {\n    const values = {\n      next: 1, prev: -1,\n    };\n\n    const acc = (values[event.target.value]);\n\n    this.setState(prev => ({\n      page: prev.page + acc,\n    }));\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Route\n          path=\"/\"\n          component={() => (\n            <Pagination\n              total={this.state.total}\n              perPage={this.state.perPage}\n              page={this.state.page}\n              withInfo\n              onPageChange={this.onPageChange}\n            />\n          )}\n        />\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}